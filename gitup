#!/bin/sh

# GitUp
# Federico Dami√°n Schonborn <github.com/feskyde>
# License: WTFPL

# search for functions on gitup.funcs file

if [ -f /etc/gitup/gitup.funcs ];then
        source /etc/gitup/gitup.funcs
        else
        source $(pwd)/gitup.funcs
fi

# lets start...

chkgitb
case $1 in
	"help")
		prthelp
		;;
	"about")
		prtabut
		;;
	"guconf")
		echo -e ""
		read -p $'\e[1mYour username: \e[0m' username
		echo -e ""
		read -p $'\e[1mYour email: \e[0m' usermail
		echo -e "\e[1m"
		echo -e "Setting...\e[0m"
		git config --global user.name "$username"
		git config --global user.email "$usermail"
		echo -e "\e[32;1m"
		echo -e "Done!"
		echo -e "\e[0m"
		;;
	"luconf")
		echo -e ""
		read -p $'\e[1mYour username: \e[0m' username
		echo -e ""
		read -p $'\e[1mYour email: \e[0m' usermail
		echo -e "\e[1m"
		echo -e "Setting...\e[0m"
		git config --local user.name "$username"
		git config --local user.email "$usermail"
		echo -e "\e[32;1m"
		echo -e "Done!"
		echo -e "\e[0m"
		;;
	"init")
		chkconf
		echo -e "\e[1m"
		echo -e "Initializing git...\e[0m"
		git init
		echo -e ""
		read -p $'\e[1mYour username: \e[0m' username
		echo -e ""
		read -p $'\e[1mRepository name: \e[0m' reponame
		echo -e "\e[1m"
		echo -e "Adding remote origin...\e[0m"
		git remote add origin https://github.com/"$username"/"$reponame".git
		echo -e "\e[32;1m"
		echo -e "Done!"
		echo -e "\e[0m"
		;;
	"rsetup")
		chkconf
		echo -e "\e[1m"
		echo -e "Initializing git on this repository...\e[0m"
		git init
		read -p $'\e[1mCommit message: \e[0m' commitm
		echo -e "\e[1m"
		echo -e "Adding file changes and message to commit...\e[0m"
		git add .
		git commit -m "$commitm"
		echo -e ""
		read -p $'\e[1mYour username: \e[0m' username
		echo -e ""
		read -p $'\e[1mRepository name: \e[0m' reponame
		echo -e "\e[1m"
		echo -e "Adding remote origin...\e[0m"
		git remote add origin https://github.com/"$username"/"$reponame".git
		echo -e "\e[1m"
		echo -e "Pushing to master branch...\e[0m"
		git push -u origin master
		echo -e "\e[32;1m"
		echo -e "Done!"
		echo -e "\e[0m"
		;;
	"commit")
		chkconf
		chkgitf
		echo -e "\e[1m"
		read -p $'\e[1mCommit message: \e[0m' commitm
		echo -e "\e[1m"
		echo -e "Adding file changes and message to commit...\e[0m"
		git add .
		git commit -m "$commitm"
		echo -e ""
		read -p $'\e[1mBranch to push: \e[0m' brapush
		echo -e "\e[1m"
		echo -e "Pushing to "$brapush" branch...\e[0m"
		git push -u origin "$brapush"
		echo -e "\e[32;1m"
		echo -e "Done!"
		echo -e "\e[0m"
		;;
	"clone")
		echo -e ""
		read -p $'\e[1mRepository to clone: \e[0m' repoclone
		echo -e ""
		read -p $'\e[1mRepository owner: \e[0m' repoowner
		echo -e ""
		git clone https://github.com/"$repoowner"/"$repoclone".git
		echo -e "\e[32;1m"
		echo -e "Done!"
		echo -e "\e[0m"
		;;
	"status")
		echo -e "\e[1m"
		echo -e "Repository status:\e[0m"
		git status
		echo -e ""
		;;
	"bcreate")
		echo -e ""
		read -p $'\e[1mName your new branch: \e[0m' branname
		echo -e "\e[1m"
		echo -e "Creating branch "$branname"...\e[0m"
		git branch "$branname"
		echo -e "\e[32;1m"
		echo -e "Done!"
		echo -e "\e[0m"
		;;
	"bremove")
		echo -e ""
		read -p $'\e[1mBranch to remove: \e[0m' branname
		echo -e "\e[1m"
		echo -e "Removing branch "$branname"...\e[0m"
		git branch -D "$branname"
		echo -e "\e[32;1m"
		echo -e "Done!"
		echo -e "\e[0m"
		;;
	"bswitch")
		echo -e ""
		read -p $'\e[1mBranch to switch: \e[0m' branname
		echo -e "\e[1m"
		echo -e "Switching to branch "$branname"...\e[0m"
		git checkout "$branname"
		echo -e "\e[32;1m"
		echo -e "Done!"
		echo -e "\e[0m"
		;;
	"rfetch")
		echo -e ""
		read -p $'\e[1mRequest ID: \e[0m' requid
		echo -e ""
		read -p $'\e[1mBranch: \e[0m' requbr
		echo -e "\e[1m"
		echo -e "Fetching files from the "$requbr" branch...\e[0m"
		git fetch origin pull/"$requid"/head:"$requbr"
		echo -e "\e[1m"
		echo -e "Switching to branch "$requbr"...\e[0m"
		git checkout "$requbr"
		echo -e "\e[1m"
		echo -e "When you think you're ready, you can push the new branch"
		echo -e "using 'gitup commit' and setting the branch name to "$requbr"\e[0m"
		echo -e ""
		;;
esac
